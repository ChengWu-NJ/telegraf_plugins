#
#bashpool -- a service to provide a pool of shells of linux bash
#  to run script in designed linux user account, and relay stdout
#  to output plugin.

[[inputs.bashpool]]

### there can be multiple usershells in a bashpool
[[inputs.bashpool.user_shell]]
    ### id must be unique
    id = "root1"
    os_user = "root"
[[inputs.bashpool.user_shell]]
    ### id must be unique
    id = "root2"
    os_user = "root"
[[inputs.bashpool.user_shell]]
    ### id must be unique
    id = "testoracle1"
    os_user = "testoracle"

### command script definitions in bashpool.
### command script must be assigned to a certian usershell
[[inputs.bashpool.cmd_define]]
    ### id must be unique
    id = "IBCollector1"
    shell_id = "root2"
    interval_second = 10
    cmd_line = '''
    #!/usr/bin/env bash

    BASE_DIR="/sys/class/infiniband/"
    LASTTPL="/dev/shm/iblast"

    IGNOR_DOWN="1"   #default not gather ports with Down state
    if [[ $1 == "-a" ]];then #gather all ports when call this sh with any argument
        IGNOR_DOWN="0"
    fi

    pushd ${BASE_DIR} > /dev/null
    for ca in $(ls)
    do
        for port in $(ls "${ca}/ports/")
        do
            state=$(cut -d" " -f2 "${ca}/ports/${port}/state")
            if [[ ${state} == "DOWN" && ${IGNOR_DOWN} == "1" ]];then continue;fi

            phys_state=$(cut -d" " -f2 "${ca}/ports/${port}/phys_state")
            rate=$(cut -d" " -f1 "${ca}/ports/${port}/rate")
            xmitdata=$(cat "${ca}/ports/${port}/counters/port_xmit_data")
            recvdata=$(cat "${ca}/ports/${port}/counters/port_rcv_data")
            IBLAST="${LASTTPL}${ca}${port}"
            if [ -e ${IBLAST} ]; then
                read -ra arr <<< $(cat ${IBLAST})
                INTERVAL=$(($(date +%s) - ${arr[2]}))
                send_bytes=$(((xmitdata - ${arr[0]})*4/${INTERVAL}))
                recv_bytes=$(((recvdata - ${arr[1]})*4/${INTERVAL}))
            else
                send_bytes=0
                recv_bytes=0
            fi
            echo "${xmitdata} ${recvdata} $(date +%s)" > ${IBLAST}

            echo "infiniband,caname=$ca,port=$port,state=\"$state\",phys_state=\"$phys_state\" rate_gb=$rate,send_bytes=$send_bytes,recv_bytes=$recv_bytes"
        done
    done
    popd > /dev/null
'''

[[inputs.bashpool.cmd_define]]
    ### id must be unique
    id = "IBCollector2"
    shell_id = "testoracle1"
    interval_second = 15
    cmd_line = '''chmod +x /dev/shm/ibcollector.sh;/dev/shm/ibcollector.sh'''

[[inputs.bashpool.cmd_define]]
    ### id must be unique
    id = "bashpooltest"
    shell_id = "testoracle1"
    interval_second = 7
    cmd_line = '''serial_number

    echo "bashpooltest,who=\"$(whoami)\" gather_time=\"$(date)\""

    '''

[[inputs.bashpool.cmd_define]]
        ### id must be unique
        id = "host_cpu"
        shell_id = "root1"
        interval_second = 3
        cmd_line = '''
n=$[$RANDOM%100]
echo "host_cpu,sn=SN00001 cpu=${n}"
'''
       